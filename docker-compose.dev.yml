version: '3.8'

services:
  # PostgreSQL Database for Development
  postgres-dev:
    image: postgres:15-alpine
    container_name: p2p-wallet-postgres-dev
    environment:
      POSTGRES_DB: p2p_wallet_dev
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - p2p-dev-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache for Development
  redis-dev:
    image: redis:7-alpine
    container_name: p2p-wallet-redis-dev
    command: redis-server --appendonly yes
    volumes:
      - redis_dev_data:/data
    ports:
      - "6379:6379"
    networks:
      - p2p-dev-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # NestJS Application for Development
  app-dev:
    build:
      context: .
      dockerfile: Dockerfile.dev
      target: development
    container_name: p2p-wallet-app-dev
    depends_on:
      postgres-dev:
        condition: service_healthy
      redis-dev:
        condition: service_healthy
    environment:
      NODE_ENV: development
      PORT: 3000
      DB_HOST: postgres-dev
      DB_PORT: 5432
      DB_USERNAME: postgres
      DB_PASSWORD: password
      DB_DATABASE: p2p_wallet_dev
      JWT_SECRET: development-secret-key
      JWT_EXPIRES_IN: 7d
      REDIS_HOST: redis-dev
      REDIS_PORT: 6379
      REDIS_PASSWORD: ""
      DEFAULT_DAILY_LIMIT: 10000
      DEFAULT_MONTHLY_LIMIT: 100000
    volumes:
      - .:/app
      - /app/node_modules
    ports:
      - "3000:3000"
      - "9229:9229"  # Debug port
    networks:
      - p2p-dev-network
    restart: unless-stopped
    command: npm run start:dev

volumes:
  postgres_dev_data:
    driver: local
  redis_dev_data:
    driver: local

networks:
  p2p-dev-network:
    driver: bridge 